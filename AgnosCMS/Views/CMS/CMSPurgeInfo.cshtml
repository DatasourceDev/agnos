@model AgnosCMS.Models.CMSPurgeInfoViewModels
@using AgnosModel.Models;
@using AgnosCMS.Models;
@using AppFramework.Control;
@using System.Collections;
@using System
@using SBSResourceAPI;
@{
   ViewBag.Title = Resource.Purging_Process;
   var readView = false;
   if (Model.Modify == null || Model.Modify.Value == false)
   {
      readView = true;
   }
   if (Model.Completed == true) { readView = true; }
}

<script type="text/javascript">

    function confirmDelete(pID) {
        if (confirm('@Resource.Message_Delete_Msg')) {
            if (pID > 0) {
                var url = '@Url.Action("CMSPurge", "CMS", new { operation = Operation.D })' + '&Purge_ID=' + pID;
                window.location.href = url;
            }
        }
    }


</script>

@using (Html.BeginForm("CMSPurgeInfo", "CMS", FormMethod.Post, new { id = "CMSForm", role = "form", enctype = "multipart/form-data", onkeydown = "return event.keyCode!=13" }))
{
   @Html.AntiForgeryToken()
   <div class="main">
      @Html.AppPageHeader(Resource.Purging_Process)
      @Html.HiddenFor(m => m.Purge_ID)
      @Html.HiddenFor(m => m.operation)
      @Html.HiddenFor(m => m.Modify)
      @Html.HiddenFor(m => m.Filling_Station_ID)
      @Html.HiddenFor(m => m.Filling_Station_ID_Dispaly)


      @Html.AppMessage(Model.result.Code, Model.result.Field + " " + Model.result.Msg)
      <section class="tile" id="divpurge">
         @Html.AppSectionHeader(Resource.Purging_Process)
         <div class="tile-body ">
            @Html.AppLabelFor(m => m.Drum_Code, 4)
            @Html.AppTextboxFor(m => m.Drum_Code, 4, new { @readonly = (Model.operation == Operation.U ? true : false) })
            @Html.AppLabelFor(m => m.Filling_Station_ID, 4)
            @Html.AppMultiControl(
                       new MvcHtmlString[] {
                             @Html.AppTextboxFor(m => m.Filling_Station_ID_Dispaly, new {@readonly  = true}),
                       }, 4
                  )
            @Html.AppLabelFor(m => m.Initial_Weight)
            @Html.AppMultiControl(
                       new MvcHtmlString[] {
                            @Html.AppTextboxDecimalFor(m => m.Initial_Weight,new {autofocus="focus"}),
                            @Html.AppButton(Resource.Get_Weight_I,AppButtonType.button,AppColor.none, new{onclick="GetWeight('Intial');" , id="btnInitial_Weight"}),
                       }, 4
                  )
            @Html.AppLabelFor(m => m.Final_Weight)
            @Html.AppMultiControl(
                       new MvcHtmlString[] {
                            @Html.AppTextboxDecimalFor(m => m.Final_Weight, new {autofocus="focus"}),
                             @Html.AppButton(Resource.Get_Weight_F,AppButtonType.button,AppColor.none, new{ onclick="GetWeight('Final');" , id="btnFinal_Weight"}),
                       }, 4
                  )
         </div>
      </section>
      <section class="tile" id="divAxSeriale">
         <object codebase="C:\Program Files\ActiveXperts\Serial Port Component\Program\AxSerial.dll" classid="CLSID:B24D8715-8901-4293-9938-AC3FBFBC9E8A"></object>
         @Html.AppSectionHeader("ActiveXperts Serial Port")
         <div class="tile-body">
            <h5 id="Comport_Info"></h5>
            <h5 id="Comport_Error"></h5>
            <textarea id="Comport_Response" name="" style="height:100px;width:300px; overflow:auto;" class="FullWidth"></textarea>
         </div>
      </section>
      <section class="tile">
         <div class="tile-body ">
            @Html.AppButton(Resource.Save, AppButtonType.submit, AppColor.blue, new { @disabled = readView, })
            @Html.AppActionLink(Resource.Cancel, Url.Action("CMSPurge", "CMS", new { }), AppColor.none)
         </div>
      </section>
   </div>
}

<html xmlns="http://www.w3.org/1999/xhtml">
<header>
   <script language="JavaScript">
        var objComport = new ActiveXObject("AxSerial.ComPort");
        if (window.addEventListener) // W3C standard
        {
            window.addEventListener('load', PageLoaded, false); // NB **not** 'onload'
        }
        else if (window.attachEvent) // Microsoft
        {
            window.attachEvent('onload', PageLoaded);
        }

        function PageLoaded() {
            $("#Comport_Info").html("Comport Name : COM2  >>  Build : " + objComport.Build + " >>  Module: " + objComport.Module);
            $("#Comport_Error").html("Result: ");
        }


        function GetWeight(type) {
            var canread = false;
            $("#Comport_Response").html("");
            if (type == "Intial") {
                $("#Initial_Weight").focus();
                $("#Initial_Weight").val(0);
            }
            else {
                $("#Final_Weight").focus();
                $("#Final_Weight").val(0);
            }

            $("#Comport_Error").html("Result: ");
            var objForm = document.forms["CMSForm"];
            objComport.Clear();

            objComport.LicenseKey = "656AF-3B74E-486AC";
            objComport.SaveLicenseKey;

            var fso = new ActiveXObject("Scripting.FileSystemObject");
            objComport.LogFile = fso.GetSpecialFolder(2) + "\\AxSerial.ComPort.Agnos.log";

            objComport.Device = "COM2"
            objComport.BaudRate = 9600;

            objComport.ComTimeout = 2000;
            objComport.HardwareFlowControl = objComport.asFLOWCONTROL_DEFAULT;
            objComport.Open();

            if (objComport.LastError == 0) {
                var strWeight = "";
                objComport.ComTimeout = 1000;
                do {
                    strWeight = objComport.ReadString();
                    if (strWeight != "" && objComport.LastError == 0) {
                        $("#Comport_Response").html("\r\n" + strWeight);
                        if (strWeight[0] == '0') {
                            var sp = strWeight.replace(/\s/g, "");
                            if (sp.length > 0) {
                                strWeight = sp.substring(1);

                                canread = true;
                                break;
                            }
                        }
                    }
                }
                while (strWeight != "");

                if (canread) {
                    if (type == "Intial") {
                        $("#Initial_Weight").val(parseFloat(strWeight));
                    } else {
                        $("#Final_Weight").val(parseFloat(strWeight));
                    }
                }
            }
            $("#Comport_Error").html("Result: " + objComport.LastError + " (" + objComport.GetErrorDescription(objComport.LastError) + ")");
            objComport.Close()
        }
   </script>
</header>
</html>
