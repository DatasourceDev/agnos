@model Agnos.Models.TemplateLogsheetInfoViewModels
@using AgnosModel.Models;
@using Agnos.Models;
@using AppFramework.Control;
@using System.Text;
@using System.Collections;
@using System
@using SBSResourceAPI;
@using AppFramework.Util;
@using Agnos.Common;
@using AgnosModel
@{
   ViewBag.Title = Resource.Template_Logsheet;

   var readView = false;
   if (Model.Modify == null || Model.Modify.Value == false)
   {
      readView = true;
   }

}
<link href="@AppSetting.SERVER_NAME/SBSTmpAPI/owl.carousel/owl-carousel/owl.carousel.css" rel="stylesheet">
<link href="@AppSetting.SERVER_NAME/SBSTmpAPI/owl.carousel/owl-carousel/owl.theme.css" rel="stylesheet">
<script src="@AppSetting.SERVER_NAME/SBSTmpAPI/owl.carousel/owl-carousel/owl.carousel.js"></script>
<script type="text/javascript">
   $(function () {
      var tabindex = '@Model.tabAction';
      if ('@string.IsNullOrEmpty(Model.tabAction)' == "True") {
         tabindex = "0";
      }
      var liID = "li-" + tabindex;
      var tabID = tabindex + "-tab";
      $("#" + liID).addClass("active");
      $("#" + tabID).addClass("active");

      if('@Model.Print'.toLowerCase() == 'true')
         $("#btnPrint").get(0).click();
   });
</script>
<script type="text/javascript">
   function DeleteHdr_Onclick(i, h) {

      Set_hAction(i, h, '@RAction.Delete')
      //var hdr = $('#divHdr-' + i + '-' + h);

      //var owl = $('#owl-demo-' + i);
      //if (owl != null)
      //   owl.data('owlCarousel').removeItem(h);

      theForm.method = 'post';
      theForm.submit();
   }
   function DeleteField_Onclick(i, f) {
      Set_fAction(i, f, '@RAction.Delete')
      //$('#divField-' + i + '-' + f).hide();
      var hcnt = $(".hdr-" + i).length;
      var m = f;
      for (var h = 0; h < hcnt; h++) {
         //$('#divMap-' + i + '-' + h + '-' + m).hide();
         Set_mAction(i, h, m, '@RAction.Delete');
      }
      theForm.method = 'post';
      theForm.submit();
   }
   function NewHdr_Onclick(i) {
      var h = $(".hdr-" + i).length;
      var data = { i: i, h: h };
      $.ajax({
         url: '@Url.Action("TmpLogNewHdr", "Template")',
         //Passes the content of an input up
         data: data,
         contentType: "application/json; charset=utf-8",
         success: function (data) {
            var owl = $('#owl-demo-' + i);
            if (owl != null) {
               owl.data('owlCarousel').addItem(data);
               owl.trigger('owl.jumpTo', h);
            }

            var hID = Get_hID(i, h);
            var thID = Get_thID(i, h);

            var inputs = [];
            var m = $(".map-" + i + "-" + h).length;
            var fcnt = $(".field-" + i).length;
            for (var f = 0; f < fcnt; f++) {
               var ac = Get_fAction(i, f);
               if (ac != '@RAction.Delete') {
                  var fID = Get_fID(i, f);
                  var tfID = Get_tfID(i, f);

                  var input = { i: i, h: h, m: m, hID: hID, fID: fID, thID: thID, tfID: tfID };
                  inputs.push(input);
                  m++;
               }
            }

            for (var j = 0; j < inputs.length; j++) {
               var input = inputs[j];
               NewMap(input, i, h);
            }
         }
      });
   }
   function NewField_Onclick(i) {
      var f = $(".field-" + i).length;
      var data = { i: i, f: f };
      $.ajax({
         url: '@Url.Action("TmpLogNewField", "Template")',
         //Passes the content of an input up
         data: data,
         contentType: "application/json; charset=utf-8",
         success: function (data) {
            $('#divField-' + i).append(data);
            var fID = Get_fID(i, f);
            var tfID = Get_tfID(i, f);

            var inputs = [];
            var hcnt = $(".hdr-" + i).length;
            for (var h = 0; h < hcnt; h++) {
               var ac = Get_hAction(i, h);
               if (ac != '@RAction.Delete') {
                  var m = $(".map-" + i + "-" + h).length;
                  var hID = Get_hID(i, h);
                  var thID = Get_thID(i, h);
                  var input = { i: i, m: m, h: h, hID: hID, fID: fID, thID: thID, tfID: tfID };
                  NewMap(input, i, h);
               }
            }
         }
      });
   }
   function Field_Onchange(opt, i, f) {

      var selfID = opt.value;
      var m = f;
      var hcnt = $(".hdr-" + i).length;
      for (var h = 0; h < hcnt; h++) {
         var ac = Get_hAction(i, h);
         if (ac != '@RAction.Delete') {
            Set_mFieldID(i, h, m, selfID);
         }
      }
   }

   function NewMap(input, i, h) {

      $.ajax({
         url: '@Url.Action("TmpLogNewMap", "Template")',
         //Passes the content of an input up
         data: input,
         contentType: "application/json; charset=utf-8",
         success: function (data) {
            $('#divHdr-' + i + '-' + h).append(data);
         }
      });
   }

 
</script>

@using (Html.BeginForm("TemplateLogsheetInfo", "Template", FormMethod.Post, new { role = "form",id="theForm" }))
{
   @Html.AntiForgeryToken()
   @Html.HiddenFor(m => m.Modify)
   @Html.HiddenFor(m => m.operation)
   @Html.HiddenFor(m => m.Template_ID)
   <div class="main">
      @Html.AppPageHeader(Resource.Template_Logsheet)
      @Html.AppMessage(Model.result.Code, Model.result.Field + " " + Model.result.Msg)

      <section class="tile" id="divModifyDetail">
         <div class="tile-body">
            @Html.AppMultiControl(
                    new MvcHtmlString[] {
                        Html.AppLabelFor(m =>m.Template_Code),
                        Html.AppLabelFor(m => m.Template_Name),
                    }, 4
                )
            @Html.AppMultiControl(
                    new MvcHtmlString[] {
                        Html.AppTextboxFor(m =>m.Template_Code),
                        Html.AppTextboxFor(m =>m.Template_Name),
                    }, 4
                )
         </div>
      </section>

      <section class="tile">
         <div class="tile-widget nopadding color green rounded-top-corners">
            <ul class="nav nav-tabs tabdrop">
               @for (var i = 0; i < Model.cGrouplist.Count(); i++)
               {
                  var cG = Model.cGrouplist[i];
                  <li id="li-@i">
                     <a href="#@i-tab" data-toggle="tab">@cG.Text </a>
                  </li>
               }
            </ul>
         </div>
         <div class="tile-body tab-content rounded-bottom-corners">
            @for (var i = 0; i < Model.cGrouplist.Count(); i++)
            {
               var cG = Model.cGrouplist[i];
               var tmpG = Model.Tmp_Log_Group_Rows.Where(w => w.Group_ID == NumUtil.ParseInteger(cG.Value)).FirstOrDefault();
               if (tmpG == null) { tmpG = new Tmp_Log_Group_Row(); }

               <div id="@i-tab" class="tab-pane fade in ">
                  @Html.Hidden(NameUtil.GenTmpLogsheet.GenGroupName(i, "Group_ID"), NumUtil.ParseInteger(cG.Value))
                  @Html.Hidden(NameUtil.GenTmpLogsheet.GenGroupName(i, "Template_ID"), Model.Template_ID)
                  @Html.Hidden(NameUtil.GenTmpLogsheet.GenGroupName(i, "Group_Order"), i)
                  @Html.Hidden(NameUtil.GenTmpLogsheet.GenGroupName(i, "Tmp_Log_Group_ID"), tmpG.Tmp_Log_Group_ID)
                  @*@Html.Hidden(NameUtil.GenTmpLogsheet.GenGroupName(i, "RowAction"), tmpG.RowAction)*@
                  <script type="text/javascript">
                     $(function () {
                        var owl = $("#owl-demo-@i");
                        owl.owlCarousel({
                           items: 2, //10 items above 1000px browser width
                           itemsDesktop: [1000, 2], //5 items between 1000px and 901px
                           itemsDesktopSmall: [900, 1], // 3 items betweem 900px and 601px
                           itemsTablet: [600, 1], //2 items between 600 and 0;
                           itemsMobile: false, // itemsMobile disabled - inherit from itemsTablet option
                        });
                        $("#btnnext-@i").click(function () {
                           owl.trigger('owl.next');
                        })
                        $("#btnprev-@i").click(function () {
                           owl.trigger('owl.prev');
                        })
                     });
                  </script>
                  <section class="tile">
                     <div class="tile-body">
                        <div class="row">
                           <div class="col-md-3 text-center">
                              @Html.AppActionLink(Resource.Btn_Add_New_Field, "#", AppColor.greensea, new { onclick = "NewField_Onclick('" + i + "')" })
                           </div>
                           <div class="col-md-9 text-center">
                              @Html.AppActionLink(Resource.Btn_Add_New_Header, "#", AppColor.greensea, new { onclick = "NewHdr_Onclick('" + i + "')" })
                           </div>
                        </div>
                        <div class="row">
                           <div id="divField-@i" class="col-md-3">
                              <div style="height:150px" class="text-center" >
                                 <div style="padding-top:112px">
                                    @Html.AppTextbox(NameUtil.GenTmpLogsheet.GenGroupName(i, "Sub_Group_Name"), tmpG.Sub_Group_Name, new { @placeholder="Sub Group Name" })
                                 </div>
                              </div>
                              @if (tmpG.Tmp_Log_Field_Rows != null)
                              {
                                 var f = 0;
                                 foreach (var tmpfield in tmpG.Tmp_Log_Field_Rows.OrderBy(o=>o.Field_Order))
                                 {
                                    if (tmpfield.RowAction != RAction.Delete)
                                    {
                                       tmpfield.cFieldlist = Model.cFieldlist;
                                       tmpfield.i = i;
                                       tmpfield.f = f;
                                       Html.RenderPartial("TmpLogsheetField", tmpfield);
                                       f++;
                                    }
                                 }
                              }
                           </div>
                           <div class="col-md-9">
                              <br />
                              <div id="owl-demo-@i" class="owl-carousel">
                                 @if (tmpG.Tmp_Log_Header_Rows != null )
                                 {
                                    var h = 0;
                                    foreach (var tmphdr in tmpG.Tmp_Log_Header_Rows.OrderBy(o => o.Header_Order))
                                    {
                                       if (tmphdr.RowAction != RAction.Delete)
                                       {
                                          tmphdr.cHeaderlist = Model.cHeaderlist;
                                          tmphdr.cDropdownTypelist = Model.cDropdowntypelist;
                                          tmphdr.i = i;
                                          tmphdr.h = h;
                                          Html.RenderPartial("TmpLogsheetHdr", tmphdr);
                                          h++;
                                       }
                                    }

                                 }
                              </div>
                           </div>

                        </div>

                        <div id="divGroupTemp-@i" style="display:none">
                        </div>
                     </div>
                  </section>
               </div>
            }
         </div>

      </section>
      <section class="tile">
         <div class="tile-body ">
            @Html.AppButton(Resource.Save, AppButtonType.submit, AppColor.blue, new { @disabled = readView, name = "savemode", value = "save" })
            @Html.AppButton(Resource.Save_Print, AppButtonType.submit, AppColor.blue, new { name = "savemode", value = "print", @disabled = readView })
            @Html.AppActionLink(Resource.Print, Url.Action("TemplateLogsheetPrint", "Template", new { Template_ID = Model.Template_ID, operation = Model.operation }), AppColor.none, new { id = "btnPrint" ,Target = ActionTarget._blank, display = "none"})
            @Html.AppActionLink(Resource.Reset, Url.Action("TemplateLogsheetInfo", "Template", new { Template_ID = Model.Template_ID, operation = Model.operation }), AppColor.none, new { @disabled = readView })
            @Html.AppActionLink(Resource.Cancel, Url.Action("TemplateLogsheet", "Template"), AppColor.none)
         </div>
      </section>
   </div>
}
<script type="text/javascript">
   function Get_fID(i, f) {
      var fID = '@NameUtil.GenTmpLogsheet.GenFieldID(9998,9999,"Field_ID")';
      fID = fID.replace("9998", i)
      fID = fID.replace("9999", f)
      fID = $('#' + fID).val();
      return fID;
   }
   function Get_fAction(i, f) {
      var ac = '@NameUtil.GenTmpLogsheet.GenFieldID(9998,9999,"RowAction")';
      ac = ac.replace("9998", i)
      ac = ac.replace("9999", f)
      ac = $('#' + ac).val();
      return ac;
   }
   function Set_fAction(i, f, value) {
      var ac = '@NameUtil.GenTmpLogsheet.GenFieldID(9998,9999,"RowAction")';
      ac = ac.replace("9998", i)
      ac = ac.replace("9999", f)
      ac = $('#' + ac).val(value);
   }
   function Get_tfID(i, f) {
      var tfID = '@NameUtil.GenTmpLogsheet.GenFieldID(9998, 9999, "Tmp_Log_Field_ID")';
      tfID = tfID.replace("9998", i)
      tfID = tfID.replace("9999", f)
      tfID = $('#' + tfID).val();
      return tfID;
   }

   function Get_hID(i, h) {
      var hID = '@NameUtil.GenTmpLogsheet.GenHeaderID(9998,9999,"Header_ID")';
      hID = hID.replace("9998", i)
      hID = hID.replace("9999", h)
      hID = $('#' + hID).val();
      return hID;
   }
   function Get_hAction(i, h) {
      var ac = '@NameUtil.GenTmpLogsheet.GenHeaderID(9998, 9999, "RowAction")';
      ac = ac.replace("9998", i)
      ac = ac.replace("9999", h)
      ac = $('#' + ac).val();
      return ac;
   }
   function Set_hAction(i, h, value) {
      var ac = '@NameUtil.GenTmpLogsheet.GenHeaderID(9998, 9999, "RowAction")';
      ac = ac.replace("9998", i)
      ac = ac.replace("9999", h)
      ac = $('#' + ac).val(value);
   }
   function Set_hOrder(i, h, value) {
      var ac = '@NameUtil.GenTmpLogsheet.GenHeaderID(9998, 9999, "Header_Order")';
      ac = ac.replace("9998", i)
      ac = ac.replace("9999", h)
      ac = $('#' + ac).val(value);
   }
   function Get_thID(i, h) {
      var thID = '@NameUtil.GenTmpLogsheet.GenHeaderID(9998, 9999, "Tmp_Log_Field_ID")';
      thID = thID.replace("9998", i)
      thID = thID.replace("9999", h)
      thID = $('#' + thID).val();
      return thID;
   }

   function Set_mFieldID(i, h, m, value) {
      var fID = '@NameUtil.GenTmpLogsheet.GenMapID(9997,9998, 9999, "Field_ID")';
      fID = fID.replace("9997", i)
      fID = fID.replace("9998", h)
      fID = fID.replace("9999", m)
      fID = $('#' + fID).val(value);
   }

   function Set_mAction(i, h, m, value) {
      var ac = '@NameUtil.GenTmpLogsheet.GenMapID(9997, 9998, 9999, "RowAction")';
      ac = ac.replace("9997", i)
      ac = ac.replace("9998", h)
      ac = ac.replace("9999", m)
      ac = $('#' + ac).val(value);
   }
</script>





<style>
   .owl-carousel .item {
      border: 2px solid #69c1cc;
      padding: 15px;
      margin: 10px;
      -webkit-border-radius: 3px;
      -moz-border-radius: 3px;
      border-radius: 3px;
   }

   .customNavigation {
      text-align: center;
   }

      .customNavigation a {
         -webkit-user-select: none;
         -khtml-user-select: none;
         -moz-user-select: none;
         -ms-user-select: none;
         user-select: none;
         -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
      }

   .owl-carousel .owl-controls .owl-pagination {
      position: inherit;
   }

   .div-Blur {
      -webkit-filter: blur(2px);
      -moz-filter: blur(2px);
      -ms-filter: blur(2px);
      -o-filter: blur(2px);
      filter: blur(2px);
   }

   .field-space
   {
      margin-bottom: 194.5px;
   }
</style>
